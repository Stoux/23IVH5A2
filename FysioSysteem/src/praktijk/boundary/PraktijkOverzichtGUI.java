/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package praktijk.boundary;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import praktijk.control.PraktijkManager;
import praktijk.entity.Praktijk;

/**
 *
 * @author Leon
 */
public class PraktijkOverzichtGUI extends javax.swing.JFrame {
    private PraktijkManager manager;
    private DefaultTableModel tableModel;

    /**
     * Creates new form PraktijkOverzichtGUI
     */
    public PraktijkOverzichtGUI() {       
        initComponents();
        
        manager = new PraktijkManager();       
        tableModel = (DefaultTableModel) praktijkenTable.getModel();        
        
        vernieuwOverzicht();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        zoekTextField = new javax.swing.JTextField();
        zoekComboBox = new javax.swing.JComboBox();
        zoekButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        praktijkenTable = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        toevoegenMenuItem = new javax.swing.JMenuItem();
        bewerkenMenuItem = new javax.swing.JMenuItem();
        verwijderMenuItem = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        zoekTextField.setName(""); // NOI18N

        zoekComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Naam", "Plaatsnaam" }));

        zoekButton.setText("Zoeken");
        zoekButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoekButtonActionPerformed(evt);
            }
        });

        praktijkenTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Naam", "Plaatsnaam", "Straatnaam", "Huisnummer", "Rekeningnummer"
            }
        ));
        jScrollPane1.setViewportView(praktijkenTable);

        jMenu1.setText("File");

        toevoegenMenuItem.setText("Toevoegen");
        toevoegenMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toevoegenMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(toevoegenMenuItem);

        bewerkenMenuItem.setText("Bewerken");
        bewerkenMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bewerkenMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(bewerkenMenuItem);

        verwijderMenuItem.setText("Verwijderen");
        verwijderMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verwijderMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(verwijderMenuItem);

        jMenuItem3.setText("Terug");
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(zoekTextField)
                    .addComponent(zoekComboBox, 0, 125, Short.MAX_VALUE)
                    .addComponent(zoekButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(zoekTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(zoekComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(zoekButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void zoekButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoekButtonActionPerformed
        // TODO add your handling code here:
        String query = zoekTextField.getText();
        Boolean isNaam = true;        
        
        if(zoekComboBox.getSelectedIndex() == 1) {
            isNaam = false;
        }

        ArrayList<Praktijk> gevondenPraktijken = manager.zoekPraktijk(query, isNaam);
        
        leegTabel();
        for(Praktijk p : gevondenPraktijken) {
            tableModel.addRow(new Object[] { p.getNaam(), p.getPlaats(), p.getPostcode(), p.getHuisnummer(), p.getIban() });
        }
    }//GEN-LAST:event_zoekButtonActionPerformed

    private void toevoegenMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toevoegenMenuItemActionPerformed
        // TODO add your handling code here:
        PraktijkWijzigGUI praktijkWijzigGUI = new PraktijkWijzigGUI(this, manager);
        praktijkWijzigGUI.setVisible(true);
    }//GEN-LAST:event_toevoegenMenuItemActionPerformed

    private void bewerkenMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bewerkenMenuItemActionPerformed
        // TODO add your handling code here:
        int index = praktijkenTable.getSelectedRow();
        
        if(index != -1) {
            PraktijkWijzigGUI praktijkWijzigGUI = new PraktijkWijzigGUI(this, manager, index);
            praktijkWijzigGUI.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Er is geen praktijk geselecteerd.", "Error", JOptionPane.ERROR_MESSAGE);
        }        
    }//GEN-LAST:event_bewerkenMenuItemActionPerformed

    private void verwijderMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verwijderMenuItemActionPerformed
        // TODO add your handling code here:
        int index = praktijkenTable.getSelectedRow();
        
        if(index != -1) {
            int dialogResult = JOptionPane.showConfirmDialog(null, "Weet u zeker dat u deze praktijk wilt verwijderen?");
            if(dialogResult == JOptionPane.YES_OPTION)
            {
                if(!manager.verwijder(index)) {
                    JOptionPane.showMessageDialog(this, "Error", "Er ging iets mis bij het verwijderen.", JOptionPane.ERROR_MESSAGE);
                }
                vernieuwOverzicht();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Er is geen praktijk geselecteerd.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_verwijderMenuItemActionPerformed
     
    private void leegTabel() {
        tableModel.setRowCount(0);
    }
    
    public void vernieuwOverzicht() {
        leegTabel();
        for(Praktijk p : manager.getPraktijken()) {
            tableModel.addRow(new Object[] { p.getNaam(), p.getPlaats(), p.getPostcode(), p.getHuisnummer(), p.getIban() });
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PraktijkOverzichtGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PraktijkOverzichtGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PraktijkOverzichtGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PraktijkOverzichtGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PraktijkOverzichtGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem bewerkenMenuItem;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable praktijkenTable;
    private javax.swing.JMenuItem toevoegenMenuItem;
    private javax.swing.JMenuItem verwijderMenuItem;
    private javax.swing.JButton zoekButton;
    private javax.swing.JComboBox zoekComboBox;
    private javax.swing.JTextField zoekTextField;
    // End of variables declaration//GEN-END:variables
}
