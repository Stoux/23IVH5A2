/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package behandel.boundary;

import behandel.control.BehandelingManager;
import behandel.entity.Behandeling;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import main.HomeGUI;

/**
 *
 * @author Nigel
 */


public class OverzichtGUI extends javax.swing.JFrame {

    /**
     * Creates new form OverzichtGUI
     */
    private BehandelingManager manager;
    
    private SimpleDateFormat datum;
    private SimpleDateFormat tijd;
    
    public OverzichtGUI(BehandelingManager manager) {
        this.manager = manager;
        datum = new SimpleDateFormat("dd/MM/yyyy");
        tijd = new SimpleDateFormat("HH:mm");
        initComponents();
        updateTabel(); 
    }

    private void updateTabel() {
        ArrayList<Behandeling> behandelingen = manager.getBehandelingen();
        DefaultTableModel overzichtModel = (DefaultTableModel) overzichtTabel.getModel();
        
        for (Behandeling behandeling : behandelingen) {
            String deDatum = datum.format(behandeling.getBegintijd());
            String beginTijd = tijd.format(behandeling.getBegintijd()); 
            String eindTijd = tijd.format(behandeling.getEindtijd());
            overzichtModel.addRow(new Object[]{behandeling.getBehandelingsID(), behandeling.getBurgerServiceNummer(), behandeling.getFysiotherapeutBSN(), behandeling.getBehandelingscode(), deDatum, beginTijd, eindTijd, behandeling.getStatus(), behandeling.getOpmerking() });  
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        overzichtTabel = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        toevoegenMenuItem = new javax.swing.JMenuItem();
        bewerkenMenuItem = new javax.swing.JMenuItem();
        verwijderMenuItem = new javax.swing.JMenuItem();
        terugMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        overzichtTabel.setAutoCreateRowSorter(true);
        overzichtTabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "PatiÃ«nt", "Fysiotherapeutcode", "Behandelcode(s)", "Datum", "Begin tijd", "Eind tijd", "Status", "Opmerkingen"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        overzichtTabel.getTableHeader().setReorderingAllowed(false);
        overzichtTabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                overzichtTabelMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(overzichtTabel);
        overzichtTabel.getColumnModel().getColumn(0).setResizable(false);
        overzichtTabel.getColumnModel().getColumn(0).setPreferredWidth(40);
        overzichtTabel.getColumnModel().getColumn(1).setResizable(false);
        overzichtTabel.getColumnModel().getColumn(1).setPreferredWidth(100);
        overzichtTabel.getColumnModel().getColumn(2).setResizable(false);
        overzichtTabel.getColumnModel().getColumn(2).setPreferredWidth(40);
        overzichtTabel.getColumnModel().getColumn(3).setResizable(false);
        overzichtTabel.getColumnModel().getColumn(3).setPreferredWidth(40);
        overzichtTabel.getColumnModel().getColumn(4).setResizable(false);
        overzichtTabel.getColumnModel().getColumn(4).setPreferredWidth(140);
        overzichtTabel.getColumnModel().getColumn(5).setResizable(false);
        overzichtTabel.getColumnModel().getColumn(5).setPreferredWidth(40);
        overzichtTabel.getColumnModel().getColumn(6).setResizable(false);
        overzichtTabel.getColumnModel().getColumn(6).setPreferredWidth(40);
        overzichtTabel.getColumnModel().getColumn(7).setResizable(false);
        overzichtTabel.getColumnModel().getColumn(7).setPreferredWidth(40);
        overzichtTabel.getColumnModel().getColumn(8).setResizable(false);
        overzichtTabel.getColumnModel().getColumn(8).setPreferredWidth(100);

        fileMenu.setText("File");

        toevoegenMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        toevoegenMenuItem.setActionCommand("Toevoegen");
        toevoegenMenuItem.setLabel("Toevoegen");
        toevoegenMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toevoegenMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(toevoegenMenuItem);

        bewerkenMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        bewerkenMenuItem.setText("Bewerken");
        bewerkenMenuItem.setEnabled(false);
        bewerkenMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bewerkenMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(bewerkenMenuItem);

        verwijderMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        verwijderMenuItem.setText("Verwijderen");
        verwijderMenuItem.setEnabled(false);
        verwijderMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verwijderMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(verwijderMenuItem);

        terugMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        terugMenuItem.setLabel("Terug");
        terugMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                terugMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(terugMenuItem);

        jMenuBar1.add(fileMenu);

        helpMenu.setText("Help");

        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        jMenuBar1.add(helpMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 829, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void terugMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_terugMenuItemActionPerformed
        new HomeGUI().setVisible(true);
        
    }//GEN-LAST:event_terugMenuItemActionPerformed

    private void verwijderMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verwijderMenuItemActionPerformed
        int result = JOptionPane.showOptionDialog(this, "Wilt u deze behandeling echt verwijderen?", "Behandeling verwijderen", 0, JOptionPane.INFORMATION_MESSAGE, null, new String[]{"Ja", "Nee"}, "default");
        if(result == 0){
            manager.deleteBehandeling(getSelectedBehandelingID());    
            updateTabel();
        }
    }//GEN-LAST:event_verwijderMenuItemActionPerformed

    private void toevoegenMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toevoegenMenuItemActionPerformed
        new BehandelingGUI(manager, this).setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_toevoegenMenuItemActionPerformed

    private void bewerkenMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bewerkenMenuItemActionPerformed
        new BehandelingGUI(manager, this, getSelectedBehandelingID()).setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_bewerkenMenuItemActionPerformed

    private void overzichtTabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_overzichtTabelMouseReleased
        bewerkenMenuItem.setEnabled(true);
        verwijderMenuItem.setEnabled(true);
    }//GEN-LAST:event_overzichtTabelMouseReleased

    
    private int getSelectedBehandelingID() {
        int row = overzichtTabel.getSelectedRow();
        return (int) overzichtTabel.getModel().getValueAt(row, 0);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OverzichtGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OverzichtGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OverzichtGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OverzichtGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new OverzichtGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem bewerkenMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable overzichtTabel;
    private javax.swing.JMenuItem terugMenuItem;
    private javax.swing.JMenuItem toevoegenMenuItem;
    private javax.swing.JMenuItem verwijderMenuItem;
    // End of variables declaration//GEN-END:variables
}
